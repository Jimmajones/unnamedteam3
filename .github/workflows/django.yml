name: Pokeset Test CI

on:
  push:
    branches: [ "main", "ci_cd", "front_end", "back_end" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.9", "3.10"]
    
    env:
      DB_DATABASE: pokeset_db
      DB_USER: root
      DB_PASSWORD: root

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .github/workflows/requirements.txt
    
    - name: Make CNF File
      run: |
        touch pokeset/my.cnf
        echo [client] >> pokeset/my.cnf
        echo database = ${{ env.DB_DATABASE }} >> pokeset/my.cnf
        echo host = localhost >> pokeset/my.cnf
        echo user = ${{ env.DB_USER }} >> pokeset/my.cnf
        echo password = ${{ env.DB_PASSWORD }} >> pokeset/my.cnf
        echo default-character-set = utf8 >> pokeset/my.cnf
        cat pokeset/my.cnf
        
    - name: Set-up Database
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER}} -p${{ env.DB_PASSWORD}}

    - name: Run Tests
      run: |
        cd pokeset
        python manage.py test

    - name: Create Coverage Report
      run: |
        cd pokeset
        coverage run --source='.' manage.py test
        coverage report
